[versions]
applicationId = "com.example.mydemo"
camera = "1.1.0"
compiledSdk = "31"
coroutines = "1.6.0"
glide = "4.13.0"
gradle = "7.2.2"
hilt = "2.42"
hiltWork = "1.0.0"
kotlin = "1.6.10"
lifecycle = "2.4.0"
minSdk = "23"
moshi = "1.13.0"
navigation = "2.4.1"
okhttp = "4.9.3"
pictureSelector = "v3.10.2"
targetSdk = "31"
retrofit = "2.9.0"
room = "2.4.2"
versionCode = "100000"
versionName = "1.0.0"
workManager = "2.7.1"

[libraries]
appcompat = "androidx.appcompat:appcompat:1.3.1"
banner = "io.github.youth5201314:banner:2.2.2"
biometric = "androidx.biometric:biometric:1.1.0"
brvah = "com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.10"
calendar = "com.haibin:calendarview:3.7.1"
camera = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
cameraCore = { module = "androidx.camera:camera-core", version.ref = "camera" }
cameraExt = { module = "androidx.camera:camera-extensions", version.ref = "camera" }
cameraLifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
cameraView = { module = "androidx.camera:camera-view", version.ref = "camera" }
commonLang = "org.apache.commons:commons-lang3:3.7"
constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.2"
core = "androidx.core:core-ktx:1.7.0"
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
espresso = "androidx.test.espresso:espresso-core:3.4.0"
exifinterface = "androidx.exifinterface:exifinterface:1.3.3"
fragment = "androidx.fragment:fragment-ktx:1.5.0"
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideCompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glideOkhttp = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "glide" }
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hiltWork = { module = "androidx.hilt:hilt-work", version.ref = "hiltWork" }
hiltWorkComplier = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltWork" }
junit = "androidx.test.ext:junit:1.1.3"
leakCanary = "com.squareup.leakcanary:leakcanary-android:2.9.1"
lifecycleExtensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycle" }
lifecycleLiveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
lifecycleReactiveStream = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycle" }
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleSaveState = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
lifecycleService = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
lifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
liveEventBus = "io.github.jeremyliao:live-event-bus-x:1.8.0"
material = "com.google.android.material:material:1.6.1"
mmkv = "com.tencent:mmkv:1.2.11"
moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshiCodegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
navigationFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigationUi = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
navigationClasspath = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }
okhttpLog = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
page = "androidx.paging:paging-runtime:3.1.0"
permissionx = "com.guolindev.permissionx:permissionx:1.6.4"
pictureCamerax = { module = "io.github.lucksiege:camerax", version.ref = "pictureSelector" }
pictureCompress = { module = "io.github.lucksiege:compress", version.ref = "pictureSelector" }
pictureSelector = { module = "io.github.lucksiege:pictureselector", version.ref = "pictureSelector" }
pictureUcrop = { module = "io.github.lucksiege:ucrop", version.ref = "pictureSelector" }
popwindow = "com.github.li-xiaojun:XPopup:2.7.6"
popwindowExt = "com.github.li-xiaojun:XPopupExt:0.0.8"
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitMoshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
room = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
startup = "androidx.startup:startup-runtime:1.1.1"
tbssdk = "com.tencent.tbs:tbssdk:44226"
toastUtils = "com.github.getActivity:ToastUtils:10.3"
workRuntime = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
workMulti = { module = "androidx.work:work-multiprocess", version.ref = "workManager" }
unpeekLivedata = "com.kunminx.arch:unpeek-livedata:7.2.0-beta1"
videoCompress = "com.github.AbedElazizShe:LightCompressor:1.2.0"


[bundles]
cameras = ["camera", "cameraCore", "cameraExt", "cameraLifecycle", "cameraView"]
coroutines = ["coroutines", "coroutinesAndroid"]
lifecycle = ["lifecycleViewModel", "lifecycleLiveData", "lifecycleRuntime", "lifecycleSaveState", "lifecycleReactiveStream", "lifecycleProcess", "lifecycleService"]
moshi = ["moshi", "moshiCodegen"]
navigation = ["navigationFragment", "navigationUi"]
picture = ["pictureSelector", "pictureCompress", "pictureUcrop", "pictureCamerax"]
pop = ["popwindow", "popwindowExt"]
retrofit = ["retrofit", "retrofitMoshi", "okhttpLog"]
work = ["workRuntime", "workMulti"]

[plugins]
android_library = { id = "com.android.library", version.ref = "gradle" }
android_application = { id = "com.android.application", version.ref = "gradle" }
hilt_plugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

